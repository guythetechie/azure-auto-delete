name: Deploy to Azure

on:
  workflow_dispatch:
  push:

jobs:
  deploy_infrastructure:
    name: Deploy Azure infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      RESOURCE_GROUP_NAME: ${{ steps.deploy_infrastructure.outputs.RESOURCE_GROUP_NAME }}
      FUNCTION_APP_NAME: ${{ steps.deploy_infrastructure.outputs.FUNCTION_APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Deploy infrastructure
        id: deploy_infrastructure
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $parameters = @{
              Name = "autodelete-deployment"
              Location = "eastus"
              TemplateFile = "${{ github.workspace }}/bicep/main.bicep"
              TemplateParameterObject = @{
                location = "eastus"
              }
            }
            $deployment = New-AzDeployment @parameters

            "RESOURCE_GROUP_NAME=$($deployment.Outputs.resourceGroupName.Value)" >> ${{ github.output }}
            "FUNCTION_APP_NAME=$($deployment.Outputs.functionAppName.Value)" >> ${{ github.output }}
          azPSVersion: 'latest'

  test:
    name: Test Azure function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Test Azure function
        run: |
          set -Eeuo pipefail
          dotnet test "${{ github.workspace }}/code/azurefunctions.tests/azurefunctions.tests.csproj"

  compile:
    name: Compile Azure function
    runs-on: ubuntu-latest
    outputs:
      AZURE_FUNCTIONS_CACHE_KEY: ${{ steps.generate_cache_key.outputs.AZURE_FUNCTIONS_CACHE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Set output directory
        run: |
          echo "FUNCTION_OUTPUT_DIRECTORY=${{ runner.temp }}/functionoutput" >> ${{ github.env }}
      - name: Build Azure function
        run: |
          set -Eeuo pipefail
          dotnet publish "${{ github.workspace }}/code/azurefunctions/azurefunctions.csproj" --configuration Release --output "${{ env.FUNCTION_OUTPUT_DIRECTORY }}"
      - name: Generate cache key
        id: generate_cache_key
        shell: pwsh
        run: |
          $key = "azure-functions-output-$(New-Guid)"
          "AZURE_FUNCTIONS_CACHE_KEY=$key" >> ${{ github.output }}
      - name: Save output
        uses: actions/cache/save@v3
        with:
          path: ${{ env.FUNCTION_OUTPUT_DIRECTORY }}
          key: ${{ steps.generate_cache_key.outputs.AZURE_FUNCTIONS_CACHE_KEY }}

  publish:
    name: Publish Azure function
    needs:
      - deploy_infrastructure
      - test
      - compile
    runs-on: windows-latest
    permissions:
      id-token: write
      packages: read
      contents: read
    steps:
      - name: Set output directory
        run: |
          $outputDirectory = Join-Path ${{ runner.temp }} "functionoutput"
          echo "FUNCTION_OUTPUT_DIRECTORY=$outputDirectory" >> ${{ github.env }}
      - name: Download output
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.FUNCTION_OUTPUT_DIRECTORY }}
          key: "${{ needs.compile.outputs.AZURE_FUNCTIONS_CACHE_KEY }}"
          fail-on-cache-miss: true
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Publish function app
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $zipPath = Join-Path "${{ runner.temp }}" "functionoutput.zip"
            $compressParameters = @{
              Path = Join-Path ${{ env.FUNCTION_OUTPUT_DIRECTORY }} "*"
              DestinationPath = $zipPath
            }
            Compress-Archive @compressParameters

            $publishParameters = @{
              Name = "${{ needs.deploy_infrastructure.outputs.FUNCTION_APP_NAME }}"
              ResourceGroupName = "${{ needs.deploy_infrastructure.outputs.RESOURCE_GROUP_NAME }}"
              ArchivePath = $zipPath
              Force = true
            }
            Publish-AzWebApp @publishParameters
          azPSVersion: 'latest'