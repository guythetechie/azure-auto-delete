name: Deploy to Azure

on:
  workflow_dispatch:
  push:

env:
  AZURE_FUNCTIONS_ARTIFACT_NAME: azure-functions

jobs:
  deploy_infrastructure:
    name: Deploy Azure infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      RESOURCE_GROUP_NAME: ${{ steps.deploy_infrastructure.outputs.RESOURCE_GROUP_NAME }}
      FUNCTION_APP_NAME: ${{ steps.deploy_infrastructure.outputs.FUNCTION_APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Deploy infrastructure
        id: deploy_infrastructure
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $parameters = @{
              Name = "autodelete-deployment"
              Location = "eastus"
              TemplateFile = "${{ github.workspace }}/bicep/main.bicep"
              TemplateParameterObject = @{
                location = "eastus"
              }
            }
            $deployment = New-AzDeployment @parameters

            "RESOURCE_GROUP_NAME=$($deployment.Outputs.resourceGroupName.Value)" >> ${{ github.output }}
            "FUNCTION_APP_NAME=$($deployment.Outputs.functionAppName.Value)" >> ${{ github.output }}
          azPSVersion: 'latest'

  test:
    name: Test Azure function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Test Azure function
        run: |
          set -Eeuo pipefail
          dotnet test "${{ github.workspace }}/code/azurefunctions.tests/azurefunctions.tests.csproj"

  compile:
    name: Compile Azure function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Build Azure function
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          $projectFilePath = Join-Path "${{ github.workspace }}"" "code" "azurefunctions" "azurefunctions.csproj"
          $outputDirectoryPath = Join-Path "${{ runner.temp }}" "functionoutput"
          & dotnet publish "$projectFilePath" --configuration Release --output "$outputDirectoryPath" --runtime win-x64 --no-self-contained
          if ($LASTEXITCODE -ne 0) { throw "Publishing function failed."}

          $zipFilePath = Join-Path "${{ runner.temp }}" "function.zip"
          Compress-Archive -Path "$(Join-Path "$outputDirectoryPath" "*")" -DestinationPath "$zipFilePath"
          
          "ARTIFACT_FILE_PATH=$zipFilePath" >> ${{ github.env }}
      - name: Save output
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONS_ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_FILE_PATH }}
          if-no-files-found: error
          retention-days: 1

  publish:
    name: Publish Azure function
    needs:
      - deploy_infrastructure
      - test
      - compile
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Set output directory
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          $downloadDirectory = Join-Path ${{ runner.temp }} "artifactdownload"
          echo "ARTIFACT_DOWNLOAD_DIRECTORY=$downloadDirectory" >> ${{ github.env }}
      - name: Download output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONS_ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_DOWNLOAD_DIRECTORY }}
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Publish function app
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $zipFile = Get-ChildItem -Path "${{ env.ARTIFACT_DOWNLOAD_DIRECTORY }}" -Include "*.zip" | Select-Object -First 1

            $publishParameters = @{
              Name = "${{ needs.deploy_infrastructure.outputs.FUNCTION_APP_NAME }}"
              ResourceGroupName = "${{ needs.deploy_infrastructure.outputs.RESOURCE_GROUP_NAME }}"
              ArchivePath = "$($zipFile.FullName)"
              Force = true
            }
            Publish-AzWebApp @publishParameters
          azPSVersion: 'latest'