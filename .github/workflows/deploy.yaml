name: Deploy to Azure

on: push

env:
  AZURE_FUNCTIONS_ARTIFACT_NAME: azure-functions

jobs:
  deploy_infrastructure:
    name: Deploy Azure infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Deploy infrastructure
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $parameters = @{
              Name = "autodelete-deployment"
              Location = "eastus"
              TemplateFile = "${{ github.workspace }}/bicep/main.bicep"
              TemplateParameterObject = @{
                location = "eastus"
              }
            }
            $deployment = New-AzDeployment @parameters
            Write-Information $deployment
          azPSVersion: 'latest'


  test:
    name: Test Azure function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Test Azure function
        run: |
          set -Eeuo pipefail
          dotnet test "${{ github.workspace }}/code/azurefunctions.tests/azurefunctions.tests.csproj"

  compile:
    name: Compile Azure function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Set output directory
        run: |
          echo "FUNCTION_OUTPUT_DIRECTORY=${{ runner.temp }}/functionoutput" >> $GITHUB_ENV
      - name: Build Azure function
        run: |
          set -Eeuo pipefail
          dotnet build "${{ github.workspace }}/code/azurefunctions/azurefunctions.csproj" --configuration Release --output "${{ env.FUNCTION_OUTPUT_DIRECTORY }}"
      - name: Save output
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONS_ARTIFACT_NAME }}
          path: ${{ env.FUNCTION_OUTPUT_DIRECTORY }}
          if-no-files-found: error
          retention-days: 1

  publish:
    name: Publish Azure function
    needs:
      - deploy_infrastructure
      - test
      - compile
    runs-on: ubuntu-latest
    steps:
      - name: Set output directory
        run: |
          echo "FUNCTION_OUTPUT_DIRECTORY=${RUNNER_TEMP}/functionoutput" >> $GITHUB_ENV
      - name: Download function artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONS_ARTIFACT_NAME }}
          path: ${{ env.FUNCTION_OUTPUT_DIRECTORY }}